{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TaskViewComponent {\n  static #_ = this.ɵfac = function TaskViewComponent_Factory(t) {\n    return new (t || TaskViewComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskViewComponent,\n    selectors: [[\"app-task-view\"]],\n    decls: 38,\n    vars: 0,\n    consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\"], [\"href\", \"\", 1, \"list-menu-item\", \"is-active\"], [\"href\", \"\", 1, \"list-menu-item\"], [1, \"button\", \"is-primary\", \"has-text-white\"], [1, \"task-list-container\", \"has-background-light\"], [1, \"task\"], [1, \"button\", \"is-primary\", \"has-text-white\", \"comments-btn\", \"is-active\"], [1, \"button\", \"is-primary\", \"has-text-white\", \"comments-btn\"]],\n    template: function TaskViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n        i0.ɵɵtext(4, \" Lists \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"a\", 5)(7, \"p\");\n        i0.ɵɵtext(8, \"All Tasks\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"a\", 5)(10, \"p\");\n        i0.ɵɵtext(11, \"Opened\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"a\", 6)(13, \"p\");\n        i0.ɵɵtext(14, \"Closed\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"a\", 6)(16, \"p\");\n        i0.ɵɵtext(17, \"In progres\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"button\", 7);\n        i0.ɵɵtext(19, \" + New List\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 8)(21, \"h1\", 3);\n        i0.ɵɵtext(22, \" Tasks \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 9)(24, \"p\");\n        i0.ɵɵtext(25, \"Something I have to do\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 10);\n        i0.ɵɵtext(27, \"All Comments\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 9)(29, \"p\");\n        i0.ɵɵtext(30, \"Something I have to do\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"button\", 11);\n        i0.ɵɵtext(32, \"All Comments\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\", 9)(34, \"p\");\n        i0.ɵɵtext(35, \"Something I have to do\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 11);\n        i0.ɵɵtext(37, \"All Comments\");\n        i0.ɵɵelementEnd()()()()();\n      }\n    },\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 438:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nexpected \\\\\\\"{\\\\\\\".\\\\n   \\u2577\\\\n93 \\u2502         ba\\\\r\\\\n   \\u2502           ^\\\\n   \\u2575\\\\n  src\\\\\\\\app\\\\\\\\pages\\\\\\\\task-view\\\\\\\\task-view.component.scss 93:11  root stylesheet\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[438]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\"]\n  });\n}","map":{"version":3,"names":["TaskViewComponent","_","_2","selectors","decls","vars","consts","template","TaskViewComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\123\\Desktop\\TMS\\frontend\\src\\app\\pages\\task-view\\task-view.component.ts","C:\\Users\\123\\Desktop\\TMS\\frontend\\src\\app\\pages\\task-view\\task-view.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\nexport class TaskViewComponent {\n\n}\n","<div class=\"centered-content\">\n    <div class=\"task-manager-container\">\n\n        <div class=\"sidebar has-background-white\">\n            <h1 class=\" title has-text-primary\">\n                Lists\n            </h1>\n\n            <div class=\"list-menu\">\n                <a href=\"\" class=\"list-menu-item is-active\">\n                    <p>All Tasks</p>\n                </a>\n                <a href=\"\" class=\"list-menu-item is-active\">\n                    <p>Opened</p>\n                </a>\n                <a href=\"\" class=\"list-menu-item\">\n                    <p>Closed</p>\n                </a>\n                <a href=\"\" class=\"list-menu-item\">\n                    <p>In progres</p>\n                </a>\n            </div>\n\n            <button class=\"button is-primary has-text-white\"> + New List</button>\n        </div>\n\n        \n\n        <div class=\"task-list-container has-background-light\">\n            <h1 class=\" title has-text-primary\">\n                Tasks\n            </h1>\n\n            <div class=\"task\">\n                <p>Something I have to do</p>\n                <button class=\"button is-primary has-text-white comments-btn is-active\">All Comments</button>\n            </div>\n            <div class=\"task\">\n                <p>Something I have to do</p>\n                <button class=\"button is-primary has-text-white comments-btn\">All Comments</button>\n            </div>\n            <div class=\"task\">\n                <p>Something I have to do</p>\n                <button class=\"button is-primary has-text-white comments-btn\">All Comments</button>\n            </div>\n        </div>\n    </div>\n</div>\n"],"mappings":";AAOA,OAAM,MAAOA,iBAAiB;EAAA,QAAAC,CAAA,G;qBAAjBD,iBAAiB;EAAA;EAAA,QAAAE,EAAA,G;UAAjBF,iBAAiB;IAAAG,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP9BE,EAAA,CAAAC,cAAA,aAA8B;QAKdD,EAAA,CAAAE,MAAA,cACJ;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAELH,EAAA,CAAAC,cAAA,aAAuB;QAEZD,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAEpBH,EAAA,CAAAC,cAAA,WAA4C;QACrCD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAEjBH,EAAA,CAAAC,cAAA,YAAkC;QAC3BD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAEjBH,EAAA,CAAAC,cAAA,YAAkC;QAC3BD,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAIzBH,EAAA,CAAAC,cAAA,iBAAiD;QAACD,EAAA,CAAAE,MAAA,mBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAKzEH,EAAA,CAAAC,cAAA,cAAsD;QAE9CD,EAAA,CAAAE,MAAA,eACJ;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAELH,EAAA,CAAAC,cAAA,cAAkB;QACXD,EAAA,CAAAE,MAAA,8BAAsB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC7BH,EAAA,CAAAC,cAAA,kBAAwE;QAAAD,EAAA,CAAAE,MAAA,oBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAEjGH,EAAA,CAAAC,cAAA,cAAkB;QACXD,EAAA,CAAAE,MAAA,8BAAsB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC7BH,EAAA,CAAAC,cAAA,kBAA8D;QAAAD,EAAA,CAAAE,MAAA,oBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAEvFH,EAAA,CAAAC,cAAA,cAAkB;QACXD,EAAA,CAAAE,MAAA,8BAAsB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC7BH,EAAA,CAAAC,cAAA,kBAA8D;QAAAD,EAAA,CAAAE,MAAA,oBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}